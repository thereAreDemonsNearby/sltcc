1. 返回值是复合类型时，我们知道应该先为其分配内存空间，然后将这块内存的地址作为第一个参数传递。
如何在发动function call时为这块返回值分配内存？
目前的想法是，func call之前肯定会在栈上开辟空间来防止多余参数，返回值的空间可以加在这块里，暂时不考虑RVO。
这里的一切细节暂且隐藏在IR的call指令中，待生成目标汇编时再考虑。
还是说显式地加入栈上分配指令？

2. 函数调用使用的参数本身可能由别的函数调用产生，怎样为此安排栈上空间？先求值再调用外层函数还是现为外层函数开辟栈空间？
使用的形式：直接拷贝全部值（这种貌似无需考虑，拿到地址即可）、点号访问成员等。。。其实expression里的临时struct也有这个问题
直接生成基本块可能会方便很多

也许可以不使用数据结构来收集局部变量，而是通过alloca dealloca这种过程式的标记来表示，这样的话自动变量和临时变量就统一了。

3. 如何在tac中表示不同类型的立即数？

5. 给ValueGenerator写点文档吧
6. 怎样在alloca里统一表示自动变量和临时变量？
7. 以字符串为例的常量的表示


Not important so far:
. 以寄存器传递的参数，可能在函数体内被取地址。